pipeline {
    agent any
    environment {
        AWS_ACCESS_KEY_ID = credentials('aws-access-key')  // ID configurado no Jenkins
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-key') // Secret configurado no Jenkins
        AWS_REGION = 'us-east-1'
        S3_BUCKET = 'projeto-upx06'
        CLOUDFRONT_DIST_ID = 'E2QHBGXQGTL4XZ'
        NODE_HOME = '/usr/local/bin'
    }
    stages {
        stage('Checkout do Código') {
            steps {
                git branch: 'main', url: 'https://github.com/GiMerguizo/projeto-upx06.git'
            }
        }
        stage('Preparar ambiente') {
            steps {
                echo 'Instalando dependências do frontend e backend...'
                //sh 'sudo npm install -g @angular/cli'
                //sh 'npm install @angular/cli'
                //sh './node_modules/.bin/ng build --prod'
                //sh 'cd Front && npm install'
                //sh 'cd API && npm install'
            }
        }
        stage('Build') {
            parallel {
                stage('Build Frontend') {
                    steps {
                        echo 'Realizando build do Frontend...'
                        sh 'pwd && ls'
                        sh 'cd Front && ng serve'
                    }
                }
                /*stage('Build Backend') {
                    steps {
                        echo 'Realizando build do Backend...'
                        sh 'cd API'
                        sh 'pwd'
                        sh 'npm install'
                        sh 'node server.js'
                    }
                }*/
            }
        }
        /*stage('Testar AWS CLI') {
            steps {
                sh 'aws --version'
            }
        }*/

        stage('Upload para S3') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: 'aws-access-key', // ID configurado no Jenkins
                ]]) {
                    echo 'Fazendo upload dos arquivos para o S3...'
                    sh '''
                    aws s3 sync Front/dist/projeto-upx06/ s3://projeto-upx06/
                    '''
                }
            }
        }

        stage('Invalidar Cache do CloudFront') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: 'aws-access-key', // ID configurado no Jenkins
                ]]) {
                    echo 'Invalidando cache do CloudFront...'
                    sh '''
                    aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DIST_ID --paths "/*"
                    '''
                }
            }
        }
    }
    post {
        success {
            echo 'Deploy concluído com sucesso!'
        }
        failure {
            echo 'Erro no deploy.'
        }
    }
}